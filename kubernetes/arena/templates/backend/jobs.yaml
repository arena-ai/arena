apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Release.Name}}-backend-setup-job
  namespace: {{.Values.namespace}}
spec:
  template:
    metadata:
      name: {{.Release.Name}}-backend-setup
      namespace: {{.Values.namespace}}
    spec:
      containers:
      - name: {{.Release.Name}}-backend-setup
        image: {{.Values.docker.registry}}/{{.Values.backend.image}}:{{.Values.backend.tag}}
        imagePullPolicy: Always
        command: ["/bin/bash"]
        args: ["-c", "/app/prestart.sh"]
        env:
        - name: DOMAIN
          value: {{.Values.cluster.host}}
        - name: ENVIRONMENT
          value: "production"
        - name: FIRST_SUPERUSER
          value: {{.Values.backend.firstSuperUser.user}}
        - name: FIRST_SUPERUSER_PASSWORD
          value: {{.Values.backend.firstSuperUser.password}}
        - name: SMTP_HOST
          value: {{.Values.backend.smtp.host}}
        {{- if .Values.backend.smtp.requireAuthentication }}
        - name: SMTP_USER
          value: {{.Values.backend.smtp.user}}
        - name: SMTP_PASSWORD
          value: {{.Values.backend.smtp.password}}
        {{- end }}
        - name: POSTGRES_PASSWORD
          value: {{.Values.postgresql.password}}
        - name: POSTGRES_SERVER
          value: "{{.Release.Name}}-postgresql-service.{{.Values.namespace}}.svc.cluster.local"
        - name: REDIS_PASSWORD
          value: {{.Values.redis.password}}
        - name: REDIS_SERVER
          value: "{{.Release.Name}}-redis-service.{{.Values.namespace}}.svc.cluster.local"
        - name: MINIO_SERVER
          value: "{{.Release.Name}}-minio.{{.Values.namespace}}.svc.cluster.local"
      restartPolicy: Never
      {{ if .Values.docker.requireAuthentication -}}
      imagePullSecrets:
      - name: arena-docker-registry-secret
      {{- end }}