apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{.Release.Name}}-ingress
  namespace: {{.Values.namespace}}
  labels:
    app.kubernetes.io/instance: {{.Release.Name}}
    app.kubernetes.io/name: {{.Chart.Name}}
    app.kubernetes.io/version: {{.Chart.AppVersion}}
    app.kubernetes.io/managed-by: {{.Release.Service}}
    app.kubernetes.io/component: backend
  annotations:
    cert-manager.io/issuer: {{.Values.cluster.tls.issuer.name | quote}}
    # the following line is to enable IP filtering in the Ingress
    # nginx.ingress.kubernetes.io/whitelist-source-range: {{.Values.cluster.IP_FILTER_CIDR | quote}}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_x_sarus_filter  != {{.Values.cluster.secretHeader | quote}}){
                return 403;
                }
spec:
  ingressClassName: nginx
  {{ if .Values.cluster.tls.enabled -}}
  tls:
  - hosts:
    - {{.Values.cluster.host}}
    secretName: {{.Values.cluster.tls.secretName}}
  {{- end }}
  rules:
  - host: {{.Values.cluster.host}}
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: {{.Release.Name}}-backend-service
            port:
              number: {{.Values.backend.service.externalPort}}
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: {{.Release.Name}}-backend-service
            port:
              number: {{.Values.backend.service.externalPort}}
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{.Release.Name}}-frontend-service
            port:
              number: {{.Values.frontend.service.externalPort}}
